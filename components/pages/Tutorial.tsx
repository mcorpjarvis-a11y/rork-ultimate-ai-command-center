import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';
import { useState } from 'react';
import { useSafeAreaInsets } from 'react-native-safe-area-context';
import { BookOpen, ChevronDown, ChevronUp, Target, TrendingUp, Calendar, DollarSign, Bot, Lock, Cpu, Sparkles, BarChart, MessageSquare } from 'lucide-react-native';
import { IronManTheme } from '@/constants/colors';

export default function Tutorial() {
  const insets = useSafeAreaInsets();
  const [expandedSection, setExpandedSection] = useState<string | null>(null);

  const toggleSection = (id: string) => {
    setExpandedSection(expandedSection === id ? null : id);
  };

  const pageTutorials = [
    {
      id: 'overview',
      icon: Target,
      title: 'Overview Dashboard',
      color: IronManTheme.primary,
      duration: '5 min',
      steps: [
        '1. Dashboard displays real-time metrics for all your accounts',
        '2. View followers, engagement rate, and monthly revenue at a glance',
        '3. Check recent insights generated by JARVIS AI',
        '4. Monitor active tasks and scheduled posts',
        '5. Access quick actions to create content or schedule posts',
        '6. Tap any metric card to see detailed analytics',
        '7. Use the refresh button to update all metrics',
      ],
      tips: [
        'Check dashboard every morning to plan your day',
        'Set goals based on AI recommendations',
        'Monitor trending insights for content ideas',
      ],
    },
    {
      id: 'content',
      icon: Sparkles,
      title: 'Content Engine',
      color: IronManTheme.secondary,
      duration: '10 min',
      steps: [
        '1. Navigate to Content Engine from sidebar',
        '2. Click "Generate Content" to create AI-powered posts',
        '3. Select target platform (Instagram, TikTok, YouTube, etc.)',
        '4. Choose content type (post, story, reel, video)',
        '5. Pick a persona or create a new one for target audience',
        '6. Review and edit AI-generated content',
        '7. Add to scheduler or post immediately',
        '8. Track performance in Analytics section',
      ],
      tips: [
        'Use trending topics from Trend Analysis',
        'Create multiple personas for different audiences',
        'Schedule content during peak engagement times',
        'Always review AI content before posting',
      ],
    },
    {
      id: 'trends',
      icon: TrendingUp,
      title: 'Trend Analysis',
      color: IronManTheme.accent,
      duration: '8 min',
      steps: [
        '1. Open Trend Analysis page',
        '2. View trending topics across all platforms',
        '3. Check engagement potential score (0-100)',
        '4. Analyze velocity (trending up or down)',
        '5. Filter trends by platform or topic',
        '6. Click "Generate Content" on any trend',
        '7. JARVIS creates optimized content for that trend',
        '8. Schedule or post content immediately',
      ],
      tips: [
        'Act fast on high-velocity trends (>80)',
        'Combine multiple trends in one post',
        'Use trends with engagement score >70',
        'Monitor trends daily for opportunities',
      ],
    },
    {
      id: 'media',
      icon: Cpu,
      title: 'Media Generator',
      color: IronManTheme.warning,
      duration: '12 min',
      steps: [
        '1. Go to Media Generator section',
        '2. Choose media type: Image, Video, or Audio',
        '3. Write detailed prompt describing what you want',
        '4. Select style: Realistic, Artistic, or Custom',
        '5. Set dimensions based on platform',
        '6. Click "Generate" and wait 30-60 seconds',
        '7. Review generated media',
        '8. Save to library or use in content',
        '9. Edit or regenerate if needed',
      ],
      tips: [
        'Be specific in prompts for better results',
        'Use platform-optimized dimensions',
        'Save good prompts for future use',
        'Combine AI media with your own for unique content',
      ],
    },
    {
      id: 'scheduler',
      icon: Calendar,
      title: 'Content Scheduler',
      color: IronManTheme.success,
      duration: '10 min',
      steps: [
        '1. Access Scheduler from sidebar',
        '2. View calendar with all scheduled posts',
        '3. Click "Add New" to schedule content',
        '4. Select platform and account',
        '5. Choose date and optimal time (AI suggests best times)',
        '6. Add content, hashtags, and media',
        '7. Set as recurring if needed',
        '8. Review and confirm schedule',
        '9. Monitor post status (Scheduled/Posted/Failed)',
      ],
      tips: [
        'Schedule at least 1 week ahead',
        'Use AI time suggestions for max engagement',
        'Batch create content for efficiency',
        'Set up recurring posts for consistency',
      ],
    },
    {
      id: 'analytics',
      icon: BarChart,
      title: 'Analytics Dashboard',
      color: IronManTheme.jarvisGreen,
      duration: '8 min',
      steps: [
        '1. Open Analytics page',
        '2. View performance across all platforms',
        '3. Check growth trends (daily, weekly, monthly)',
        '4. Analyze engagement rates by content type',
        '5. Review top-performing posts',
        '6. Identify underperforming content',
        '7. Get AI recommendations for improvement',
        '8. Export reports for deeper analysis',
      ],
      tips: [
        'Check analytics weekly',
        'Compare performance across platforms',
        'Act on AI recommendations quickly',
        'Learn from top-performing content',
      ],
    },
    {
      id: 'monetization',
      icon: DollarSign,
      title: 'Monetization Hub',
      color: IronManTheme.success,
      duration: '15 min',
      steps: [
        '1. Navigate to Monetization section',
        '2. View all revenue streams and earnings',
        '3. Click "Add Stream" to set up new revenue source',
        '4. Choose type: Sponsorship, Affiliate, Subscription, Ads',
        '5. Enter platform and estimated earnings',
        '6. Link accounts for auto-tracking',
        '7. Review AI optimization suggestions',
        '8. Set revenue goals',
        '9. Monitor progress weekly',
      ],
      tips: [
        'Diversify revenue streams',
        'Set realistic monthly goals',
        'Track costs vs revenue',
        'Leverage AI for optimization',
      ],
    },
    {
      id: 'iot',
      icon: Cpu,
      title: 'IoT Device Control',
      color: IronManTheme.accent,
      duration: '12 min',
      steps: [
        '1. Open IoT Devices page',
        '2. Click "Discover Devices" to scan network',
        '3. Select and add discovered devices',
        '4. For 3D printers: Enter IP address and API key',
        '5. For smart devices: Configure connection settings',
        '6. Test device connection',
        '7. Use control panel to send commands',
        '8. Create automation rules for scheduled tasks',
        '9. Monitor device status in real-time',
        '10. Ask JARVIS to control devices via chat',
      ],
      tips: [
        'Keep devices on same network',
        'Test commands before automation',
        'Create rules for routine tasks',
        'Use JARVIS voice commands for hands-free control',
      ],
    },
    {
      id: 'jarvis',
      icon: Bot,
      title: 'JARVIS AI Assistant',
      color: IronManTheme.jarvisGreen,
      duration: '10 min',
      steps: [
        '1. Click JARVIS button (floating or header)',
        '2. Use voice or text to communicate',
        '3. Ask JARVIS to perform tasks: "Generate Instagram post about tech"',
        '4. Request analysis: "Analyze my TikTok performance"',
        '5. Schedule posts: "Schedule content for next week"',
        '6. Get insights: "What should I post today?"',
        '7. Control IoT: "Start 3D printer job"',
        '8. Configure settings in Settings tab',
        '9. Manage AI models in AI tab',
        '10. View capabilities in Tools tab',
      ],
      tips: [
        'Be specific in requests',
        'Use voice for hands-free operation',
        'Enable auto-speak for responses',
        'Review suggested actions before approval',
        'Use free AI models to save costs',
      ],
    },
    {
      id: 'apikeys',
      icon: Lock,
      title: 'API Keys & Integrations',
      color: IronManTheme.danger,
      duration: '15 min',
      steps: [
        '1. Go to API Keys section',
        '2. Review required integrations',
        '3. Click "Setup" on any integration',
        '4. Follow provider-specific instructions',
        '5. Copy API key from provider dashboard',
        '6. Paste key in the form',
        '7. Click "Test Connection"',
        '8. Verify status shows "Connected"',
        '9. Repeat for all required integrations',
        '10. Use free AI providers first to save costs',
      ],
      tips: [
        'Start with free AI models',
        'Keep API keys secure',
        'Test connections regularly',
        'Enable only needed integrations',
        'Monitor usage and costs',
      ],
    },
    {
      id: 'security',
      icon: Lock,
      title: 'Security & Privacy',
      color: IronManTheme.danger,
      duration: '8 min',
      steps: [
        '1. Access Security page',
        '2. Review connected accounts and permissions',
        '3. Enable 2-factor authentication',
        '4. Set up data encryption',
        '5. Configure backup schedule',
        '6. Review privacy settings',
        '7. Manage data retention policies',
        '8. Export or delete data as needed',
      ],
      tips: [
        'Enable all security features',
        'Regular backups protect your data',
        'Review permissions quarterly',
        'Use strong unique passwords',
      ],
    },
  ];

  const quickStart = {
    title: '🚀 Quick Start Guide',
    steps: [
      '1. **First Launch**: Complete onboarding wizard',
      '2. **Connect Accounts**: Link social media in Social Connect',
      '3. **Set Up AI**: Configure API keys for AI providers',
      '4. **Create Persona**: Build your first content persona',
      '5. **Generate Content**: Ask JARVIS to create your first post',
      '6. **Schedule Post**: Set up your content calendar',
      '7. **Monitor Analytics**: Track performance daily',
      '8. **Optimize**: Act on AI recommendations',
    ],
  };

  const faqs = [
    {
      q: 'How do I start using JARVIS?',
      a: 'Click the JARVIS button and ask questions or give commands. JARVIS can generate content, analyze data, schedule posts, and control IoT devices.',
    },
    {
      q: 'Which AI models should I use?',
      a: 'Start with free models (Gemini Flash, Flux Schnell) for most tasks. Use paid models only for critical or complex tasks like code generation.',
    },
    {
      q: 'How do I connect my social accounts?',
      a: 'Go to Social Connect, click "Add Account", select platform, and follow OAuth flow or enter credentials.',
    },
    {
      q: 'Can JARVIS post automatically?',
      a: 'Yes, enable autonomous mode in Settings. Set spending limits and approval thresholds for safety.',
    },
    {
      q: 'How do I control 3D printers?',
      a: 'Add printer in IoT Devices with IP address and API key. Then control via panel or ask JARVIS.',
    },
    {
      q: 'Is my data safe?',
      a: 'Yes. All data is encrypted, stored locally first, and backed up securely. Review Security page for details.',
    },
  ];

  return (
    <View style={[styles.container, { paddingBottom: insets.bottom }]}>
      <ScrollView style={styles.scrollView} contentContainerStyle={styles.content}>
        <View style={styles.headerSection}>
          <BookOpen color={IronManTheme.accent} size={48} />
          <Text style={styles.pageTitle}>JARVIS Tutorial Center</Text>
          <Text style={styles.subtitle}>
            Complete guide to mastering your AI command center
          </Text>
        </View>

        <View style={styles.quickStartCard}>
          <Text style={styles.quickStartTitle}>{quickStart.title}</Text>
          {quickStart.steps.map((step, index) => (
            <Text key={index} style={styles.quickStartStep}>{step}</Text>
          ))}
        </View>

        <Text style={styles.sectionTitle}>📖 Page-by-Page Tutorials</Text>
        <View style={styles.tutorialsList}>
          {pageTutorials.map((tutorial) => {
            const Icon = tutorial.icon;
            const isExpanded = expandedSection === tutorial.id;
            
            return (
              <View key={tutorial.id} style={styles.tutorialCard}>
                <TouchableOpacity 
                  style={styles.tutorialHeader}
                  onPress={() => toggleSection(tutorial.id)}
                >
                  <View style={[styles.tutorialIcon, { backgroundColor: tutorial.color + '20', borderColor: tutorial.color }]}>
                    <Icon size={24} color={tutorial.color} />
                  </View>
                  <View style={styles.tutorialInfo}>
                    <Text style={styles.tutorialTitle}>{tutorial.title}</Text>
                    <Text style={styles.tutorialDuration}>⏱️ {tutorial.duration}</Text>
                  </View>
                  {isExpanded ? (
                    <ChevronUp color={IronManTheme.text} size={20} />
                  ) : (
                    <ChevronDown color={IronManTheme.textMuted} size={20} />
                  )}
                </TouchableOpacity>

                {isExpanded && (
                  <View style={styles.tutorialContent}>
                    <Text style={styles.contentLabel}>📋 Step-by-Step Guide:</Text>
                    {tutorial.steps.map((step, index) => (
                      <Text key={index} style={styles.tutorialStep}>{step}</Text>
                    ))}
                    
                    <Text style={styles.contentLabel}>💡 Pro Tips:</Text>
                    {tutorial.tips.map((tip, index) => (
                      <Text key={index} style={styles.tutorialTip}>• {tip}</Text>
                    ))}
                  </View>
                )}
              </View>
            );
          })}
        </View>

        <Text style={styles.sectionTitle}>❓ Frequently Asked Questions</Text>
        <View style={styles.faqList}>
          {faqs.map((faq, index) => (
            <View key={index} style={styles.faqCard}>
              <Text style={styles.faqQuestion}>{faq.q}</Text>
              <Text style={styles.faqAnswer}>{faq.a}</Text>
            </View>
          ))}
        </View>

        <View style={styles.supportCard}>
          <MessageSquare color={IronManTheme.accent} size={32} />
          <Text style={styles.supportTitle}>Need More Help?</Text>
          <Text style={styles.supportText}>
            Ask JARVIS anything! Click the JARVIS button and type or speak your question.
            JARVIS can guide you through any feature step-by-step.
          </Text>
          <TouchableOpacity 
            style={styles.supportButton}
            onPress={() => Alert.alert('JARVIS', 'Open the JARVIS assistant from the floating button or header icon.')}
          >
            <Bot size={20} color={IronManTheme.background} />
            <Text style={styles.supportButtonText}>Open JARVIS Assistant</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: IronManTheme.background,
  },
  scrollView: {
    flex: 1,
  },
  content: {
    padding: 20,
    paddingBottom: 100,
  },
  headerSection: {
    alignItems: 'center',
    marginBottom: 32,
    paddingVertical: 20,
  },
  pageTitle: {
    fontSize: 28,
    fontWeight: '700' as const,
    color: IronManTheme.accent,
    marginTop: 16,
    marginBottom: 8,
    letterSpacing: 1,
  },
  subtitle: {
    fontSize: 14,
    color: IronManTheme.textSecondary,
    textAlign: 'center' as const,
    maxWidth: 320,
    lineHeight: 20,
  },
  quickStartCard: {
    backgroundColor: IronManTheme.surface,
    borderRadius: 16,
    padding: 20,
    marginBottom: 32,
    borderWidth: 2,
    borderColor: IronManTheme.accent,
  },
  quickStartTitle: {
    fontSize: 20,
    fontWeight: '700' as const,
    color: IronManTheme.text,
    marginBottom: 16,
  },
  quickStartStep: {
    fontSize: 14,
    color: IronManTheme.textSecondary,
    marginBottom: 10,
    lineHeight: 20,
  },
  sectionTitle: {
    fontSize: 22,
    fontWeight: '700' as const,
    color: IronManTheme.text,
    marginBottom: 16,
    marginTop: 8,
  },
  tutorialsList: {
    gap: 12,
    marginBottom: 32,
  },
  tutorialCard: {
    backgroundColor: IronManTheme.surface,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: IronManTheme.surfaceLight,
    overflow: 'hidden',
  },
  tutorialHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
    gap: 12,
  },
  tutorialIcon: {
    width: 48,
    height: 48,
    borderRadius: 24,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
  },
  tutorialInfo: {
    flex: 1,
  },
  tutorialTitle: {
    fontSize: 16,
    fontWeight: '600' as const,
    color: IronManTheme.text,
    marginBottom: 4,
  },
  tutorialDuration: {
    fontSize: 12,
    color: IronManTheme.textMuted,
  },
  tutorialContent: {
    padding: 16,
    paddingTop: 0,
    gap: 12,
  },
  contentLabel: {
    fontSize: 14,
    fontWeight: '700' as const,
    color: IronManTheme.jarvisGreen,
    marginTop: 8,
    marginBottom: 4,
  },
  tutorialStep: {
    fontSize: 13,
    color: IronManTheme.textSecondary,
    lineHeight: 20,
    marginLeft: 8,
  },
  tutorialTip: {
    fontSize: 13,
    color: IronManTheme.accent,
    lineHeight: 20,
    marginLeft: 8,
  },
  faqList: {
    gap: 12,
    marginBottom: 32,
  },
  faqCard: {
    backgroundColor: IronManTheme.surface,
    borderRadius: 12,
    padding: 16,
    borderWidth: 1,
    borderColor: IronManTheme.surfaceLight,
  },
  faqQuestion: {
    fontSize: 15,
    fontWeight: '600' as const,
    color: IronManTheme.text,
    marginBottom: 8,
  },
  faqAnswer: {
    fontSize: 14,
    color: IronManTheme.textSecondary,
    lineHeight: 20,
  },
  supportCard: {
    backgroundColor: IronManTheme.surface,
    borderRadius: 16,
    padding: 24,
    alignItems: 'center',
    borderWidth: 2,
    borderColor: IronManTheme.jarvisGreen,
  },
  supportTitle: {
    fontSize: 20,
    fontWeight: '700' as const,
    color: IronManTheme.text,
    marginTop: 16,
    marginBottom: 8,
  },
  supportText: {
    fontSize: 14,
    color: IronManTheme.textSecondary,
    textAlign: 'center' as const,
    lineHeight: 20,
    marginBottom: 20,
  },
  supportButton: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
    backgroundColor: IronManTheme.jarvisGreen,
    paddingVertical: 12,
    paddingHorizontal: 24,
    borderRadius: 24,
  },
  supportButtonText: {
    fontSize: 15,
    fontWeight: '600' as const,
    color: IronManTheme.background,
  },
});
